- hosts: localhost

  tasks:
    - set_fact:
        home_dir: "{{ lookup('env', 'HOME') }}"

    - name: Update packages
      become: yes
      ansible.builtin.apt:
        update_cache: "yes"
        upgrade: "yes"
        state: latest

    - name: Install packages
      become: yes
      ansible.builtin.apt:
        name:
          - bat
          - zsh
          - vim
          - cmake
          - build-essential

    - name: Allow the current user to sudo without a password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: "{{ ansible_user_id }} ALL=(ALL) NOPASSWD:ALL"
        
    - name: Check that /etc/wsl.conf exists
      ansible.builtin.stat:
        path: /etc/wsl.conf
      register: wsl_conf
  
    - name: Add the / shared mount to the /etc/wsl.conf file if it exists [this means we are running inside wsl]
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/wsl.conf
        line: command="mount --make-shared /"
      when: wsl_conf.stat.exists
        
    - name: git clone dot files
      ansible.builtin.git:
        repo: https://github.com/gozumi/dotfiles.git
        dest: "{{home_dir}}/packages/dotfiles"
        version: main

    - name: Create a symbolic link to the .zshrc file
      ansible.builtin.file:
        src: "{{home_dir}}/packages/dotfiles/.zshrc"
        dest: "{{home_dir}}/.zshrc"
        state: link
        force: true

    - name: Make zsh the default shell
      user: "name={{ ansible_user_id }} shell=/usr/bin/zsh"
      become: yes

    - name: Download the rust installation script
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: "{{home_dir}}/packages/sh.rustup.rs"
        mode: "0750"
        force: true

    - name: Install rust
      ansible.builtin.shell: "{{home_dir}}/packages/sh.rustup.rs -y"

    - name: Give a notification that the script is done
      ansible.builtin.shell: echo "Ansible setup is done! Woohoo!"
